diff --git a/build-custom-worker.js b/build-custom-worker.js
index b741ebc639ffc16a56001bb33212a6d4752be9f5..9916fe2aea252532baf03b7b994a5578cbde634a 100644
--- a/build-custom-worker.js
+++ b/build-custom-worker.js
@@ -4,6 +4,7 @@ const path = require('path')
 const fs = require('fs')
 const webpack = require('webpack')
 const { CleanWebpackPlugin } = require('clean-webpack-plugin')
+const NodePolyfillPlugin = require("node-polyfill-webpack-plugin")
 const TerserPlugin = require('terser-webpack-plugin')
 
 const buildCustomWorker = ({ id, basedir, destdir, plugins, success, minify }) => {
@@ -34,10 +35,25 @@ const buildCustomWorker = ({ id, basedir, destdir, plugins, success, minify }) =
       main: customWorkerEntry
     },
     resolve: {
-      extensions: ['.ts', '.js']
+      extensions: ['.ts', '.js'],
+      fallback: {
+        module: false,
+        dgram: false,
+        dns: false,
+        fs: false,
+        http2: false,
+        net: false,
+        tls: false,
+        child_process: false
+      }
     },
     module: {
       rules: [
+        {
+          test: /\.(graphql|gql)$/,
+          use: "graphql-tag/loader",
+          exclude: /node_modules/
+        },
         {
           test: /\.(t|j)s$/i,
           use: [
@@ -68,19 +84,24 @@ const buildCustomWorker = ({ id, basedir, destdir, plugins, success, minify }) =
       ]
     },
     output: {
+      // See https://github.com/webpack/webpack/issues/959#issuecomment-811466240
+      chunkFilename: '[id].chunk.[chunkhash].js',
       path: destdir,
       filename: name
     },
     plugins: [
+      new NodePolyfillPlugin({
+        excludeAliases: ["console"]
+      }),
       new CleanWebpackPlugin({
         cleanOnceBeforeBuildPatterns: [path.join(destdir, 'worker-*.js'), path.join(destdir, 'worker-*.js.map')]
       })
     ].concat(plugins),
     optimization: minify
       ? {
-          minimize: true,
-          minimizer: [new TerserPlugin()]
-        }
+        minimize: true,
+        minimizer: [new TerserPlugin()]
+      }
       : undefined
   }).run((error, status) => {
     if (error || status.hasErrors()) {
diff --git a/build-fallback-worker.js b/build-fallback-worker.js
index af3ce017de6f008500f567f58f4f96749a27004e..cf6ce2746b66016dee161eed495a132ab2224723 100644
--- a/build-fallback-worker.js
+++ b/build-fallback-worker.js
@@ -4,9 +4,10 @@ const path = require('path')
 const fs = require('fs')
 const webpack = require('webpack')
 const { CleanWebpackPlugin } = require('clean-webpack-plugin')
+const NodePolyfillPlugin = require("node-polyfill-webpack-plugin")
 const TerserPlugin = require('terser-webpack-plugin')
 
-const getFallbackEnvs = ({fallbacks, basedir, id}) => {
+const getFallbackEnvs = ({ fallbacks, basedir, id }) => {
   let { document, data } = fallbacks
 
   if (!document) {
@@ -30,8 +31,8 @@ const getFallbackEnvs = ({fallbacks, basedir, id}) => {
 
   if (data && data.endsWith('.json')) {
     data = path.posix.join('/_next/data', id, data)
-  } 
-  
+  }
+
   const envs = {
     __PWA_FALLBACK_DOCUMENT__: document || false,
     __PWA_FALLBACK_IMAGE__: fallbacks.image || false,
@@ -50,12 +51,12 @@ const getFallbackEnvs = ({fallbacks, basedir, id}) => {
   if (envs.__PWA_FALLBACK_VIDEO__) console.log(`> [PWA]   video: ${envs.__PWA_FALLBACK_VIDEO__}`)
   if (envs.__PWA_FALLBACK_FONT__) console.log(`> [PWA]   font: ${envs.__PWA_FALLBACK_FONT__}`)
   if (envs.__PWA_FALLBACK_DATA__) console.log(`> [PWA]   data (/_next/data/**/*.json): ${envs.__PWA_FALLBACK_DATA__}`)
-  
+
   return envs
 }
 
 const buildFallbackWorker = ({ id, fallbacks, basedir, destdir, success, minify }) => {
-  const envs = getFallbackEnvs({fallbacks, basedir, id})
+  const envs = getFallbackEnvs({ fallbacks, basedir, id })
   if (!envs) return false
 
   const name = `fallback-${id}.js`
@@ -68,10 +69,25 @@ const buildFallbackWorker = ({ id, fallbacks, basedir, destdir, success, minify
       main: fallbackJs
     },
     resolve: {
-      extensions: ['.js']
+      extensions: ['.js'],
+      fallback: {
+        module: false,
+        dgram: false,
+        dns: false,
+        fs: false,
+        http2: false,
+        net: false,
+        tls: false,
+        child_process: false
+      }
     },
     module: {
       rules: [
+        {
+          test: /\.(graphql|gql)$/,
+          use: "graphql-tag/loader",
+          exclude: /node_modules/
+        },
         {
           test: /\.js$/i,
           use: [
@@ -97,10 +113,15 @@ const buildFallbackWorker = ({ id, fallbacks, basedir, destdir, success, minify
       ]
     },
     output: {
+      // See https://github.com/webpack/webpack/issues/959#issuecomment-811466240
+      chunkFilename: '[id].chunk.[chunkhash].js',
       path: destdir,
       filename: name
     },
     plugins: [
+      new NodePolyfillPlugin({
+        excludeAliases: ["console"]
+      }),
       new CleanWebpackPlugin({
         cleanOnceBeforeBuildPatterns: [path.join(destdir, 'fallback-*.js'), path.join(destdir, 'fallback-*.js.map')]
       }),
@@ -116,7 +137,7 @@ const buildFallbackWorker = ({ id, fallbacks, basedir, destdir, success, minify
       console.error(status.toString({ colors: true }))
       process.exit(-1)
     } else {
-      success({name, precaches: Object.values(envs).filter(v => !!v)})
+      success({ name, precaches: Object.values(envs).filter(v => !!v) })
     }
   })
 
diff --git a/package.json b/package.json
index f049657007afe28f6b608f9e4d402f00603c04a7..88c6ac2c0048f81c5ad4b2d111b1fed326f9e7ed 100644
--- a/package.json
+++ b/package.json
@@ -18,6 +18,7 @@
     "babel-loader": "^8.2.2",
     "clean-webpack-plugin": "^3.0.0",
     "globby": "^11.0.3",
+    "node-polyfill-webpack-plugin": "^1.1.2",
     "terser-webpack-plugin": "^5.1.1",
     "workbox-webpack-plugin": "^6.1.5",
     "workbox-window": "^6.1.5"
