name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - "feature/**"
jobs:
  install-typescript:
    name: Install Typescript packages
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - name: Fetch/Save yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{secrets.ACTIONS_CACHE_VERSION}}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Fetch/Save cypress cache
        uses: actions/cache@v2
        id: cypress-cache
        with:
          path: /home/runner/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{secrets.ACTIONS_CACHE_VERSION}}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-cypress-
      - name: install dependencies
        run: yarn install --immutable
      - name: generate prisma
        run: cd typescript/db && yarn generate
      - name: Ensure node_modules are up to date in the cache
        uses: actions/cache@v2
        id: node-modules-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{secrets.ACTIONS_CACHE_VERSION}}-${{ hashFiles('yarn.lock') }}

  lint-typescript:
    name: Lint Typescript code
    runs-on: ubuntu-20.04
    needs: install-typescript
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Fetch node_modules from cache
        uses: actions/cache@v2
        id: node-modules-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{secrets.ACTIONS_CACHE_VERSION}}-${{ hashFiles('yarn.lock') }}
      - name: lint project code
        run: yarn lint

  lint-python:
    name: Lint Python code
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.8
      - name: Install Black
        run: pip install black
      - name: Run black --check .
        run: black --check .
      # - name: If needed, commit black changes to the pull request
      #   if: failure()
      #   run: |
      #     black .
      #     git config --global user.name 'autoblack'
      #     git config --global user.email 'cclauss@users.noreply.github.com'
      #     git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
      #     git checkout $GITHUB_HEAD_REF
      #     git commit -am "fixup: Format Python code with Black"
      #     git push

  test-typescript:
    name: Unit Tests Typescript code
    runs-on: ubuntu-20.04
    needs: install-typescript
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Fetch node_modules from cache
        uses: actions/cache@v2
        id: node-modules-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{secrets.ACTIONS_CACHE_VERSION}}-${{ hashFiles('yarn.lock') }}
      - name: check node_modules
        run: ls typescript/web-app/node_modules
      - name: run tests
        run: yarn test

  check-codegen-diff:
    name: Check diff after codegen
    runs-on: ubuntu-20.04
    needs: install-typescript
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Fetch node_modules from cache
        uses: actions/cache@v2
        id: node-modules-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{secrets.ACTIONS_CACHE_VERSION}}-${{ hashFiles('yarn.lock') }}
      - name: run codegen:ci script
        run: yarn codegen:ci
      - name: Check for failure
        if: ${{ failure() }}
        run: echo "::error::Codegen diff detected, please commit your schema changes." && exit 1

  chromatic-deployment:
    name: Storybook deployment
    runs-on: ubuntu-20.04
    needs: install-typescript
    # Job steps
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # ðŸ‘ˆ Required to retrieve git history
      - name: Fetch node_modules from cache
        uses: actions/cache@v2
        id: node-modules-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{secrets.ACTIONS_CACHE_VERSION}}-${{ hashFiles('yarn.lock') }}
      - name: Publish to Chromatic
        uses: chromaui/action@v1
        # Chromatic GitHub Action options
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # ðŸ‘‡ Chromatic projectToken, refer to the manage page to obtain it.
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}

  e2e-analysis:
    name: E2E Tests and bundle analysis
    runs-on: ubuntu-20.04
    needs: install-typescript
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Fetch node_modules from cache
        uses: actions/cache@v2
        id: node-modules-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{secrets.ACTIONS_CACHE_VERSION}}-${{ hashFiles('yarn.lock') }}
      - name: Fetch/Save cypress cache
        uses: actions/cache@v2
        id: cypress-cache
        with:
          path: /home/runner/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{secrets.ACTIONS_CACHE_VERSION}}-${{ hashFiles('yarn.lock') }}
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          install: false
          build: yarn bundlewatch:web-app
          start: yarn start:web-app
          wait-on: "http://localhost:3000"
          wait-on-timeout: 300
          browser: chrome
          record: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Bundlewatch
          # See https://bundlewatch.io/#/getting-started/using-bundlewatch?id=setup-ci-auth-variables-needed-by-bundlewatch
          BUNDLEWATCH_GITHUB_TOKEN: ${{ secrets.BUNDLEWATCH_GITHUB_TOKEN }}
          CI_REPO_OWNER: labelflow
          CI_REPO_NAME: labelflow
          CI_COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
          CI_BRANCH: ${{ github.ref	}}
          CI_BRANCH_BASE: refs/heads/main

  deploy-strapi-main:
    name: Deploy Strapi on Heroku production
    if: contains( github.ref, 'main')
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Deploy to Heroku
        # See https://github.com/marketplace/actions/deploy-to-heroku#deploy-subdirectory
        uses: akhileshns/heroku-deploy@v3.12.12 
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "labelflow-strapi"
          heroku_email: "vincent.lecrubier@labelflow.ai"
          team: "labelflow"
          appdir: "strapi"

  deploy-webapp-pr:
    name: Deploy webapp PR branch
    if: "! contains( github.ref, 'main')"
    runs-on: ubuntu-20.04
    needs: install-typescript
    steps:
      - name: start deployment
        uses: bobheadxi/deployments@v0.4.3
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: "Preview â€“ labelflow-app"
          ref: ${{ github.head_ref }}
          no_override: false
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Deploy webapp on Vercel
        uses: amondnet/vercel-action@v20
        id: vercel
        with:
          scope: ${{ secrets.VERCEL_ORG_ID}}
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          github-token: ${{ secrets.GITHUB_TOKEN }} #Optional
          vercel-args: "" #Optional
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}} #Required
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_WEBAPP}} #Required
          vercel-project-name: "labelflow-app"
          # working-directory: ./typescript/web-app
          working-directory: .
          # alias-domains: | #Optional
          #   app.labelflow.ai
          #   pr-{{PR_NUMBER}}.app.labelflow.ai
          alias-domains: | #Optional
            pr-{{PR_NUMBER}}.app.labelflow.ai
      - run: npx vercel logs ${{steps.vercel.outputs.preview-url}} --token ${{ secrets.VERCEL_TOKEN }}
      - name: update deployment status
        uses: bobheadxi/deployments@v0.4.3
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: ${{steps.vercel.outputs.preview-url}}

  deploy-website-pr:
    name: Deploy website PR branch
    if: "! contains( github.ref, 'main')"
    runs-on: ubuntu-20.04
    needs: install-typescript
    steps:
      - name: start deployment
        uses: bobheadxi/deployments@v0.4.3
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: "Preview â€“ labelflow-site"
          ref: ${{ github.head_ref }}
          no_override: false
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Deploy website on Vercel
        uses: amondnet/vercel-action@v20
        id: vercel
        with:
          scope: ${{ secrets.VERCEL_ORG_ID}}
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          github-token: ${{ secrets.GITHUB_TOKEN }} #Optional
          vercel-args: "" #Optional
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}} #Required
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_WEBSITE}} #Required
          vercel-project-name: "labelflow-site"
          # working-directory: ./typescript/web-site
          working-directory: .
          # alias-domains: | #Optional
          #   www.labelflow.ai
          #   pr-{{PR_NUMBER}}.www.labelflow.ai
          alias-domains: | #Optional
            pr-{{PR_NUMBER}}.www.labelflow.ai
      - run: npx vercel logs ${{steps.vercel.outputs.preview-url}} --token ${{ secrets.VERCEL_TOKEN }}
      - name: update deployment status
        uses: bobheadxi/deployments@v0.4.3
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: ${{steps.vercel.outputs.preview-url}}

  deploy-webapp-main:
    name: Deploy webapp to production
    if: contains( github.ref, 'main')
    runs-on: ubuntu-20.04
    needs: install-typescript
    steps:
      - name: start deployment
        uses: bobheadxi/deployments@v0.4.3
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: "Production â€“ labelflow-app"
          ref: ${{ github.head_ref }}
          no_override: true
      - name: Check out repository code
        uses: actions/checkout@v2      
      - name: Deploy webapp on Vercel
        uses: amondnet/vercel-action@v20
        id: vercel
        with:
          scope: ${{ secrets.VERCEL_ORG_ID}}
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          github-token: ${{ secrets.GITHUB_TOKEN }} #Optional
          vercel-args: "--prod" #Optional
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}} #Required
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_WEBAPP}} #Required
          vercel-project-name: "labelflow-app"
          # working-directory: ./typescript/web-app
          working-directory: .
          # alias-domains: | #Optional
          #   app.labelflow.ai
          #   pr-{{PR_NUMBER}}.app.labelflow.ai
          alias-domains: | #Optional
            app.labelflow.ai
      - run: npx vercel logs ${{steps.vercel.outputs.preview-url}} --token ${{ secrets.VERCEL_TOKEN }}
      - name: update deployment status
        uses: bobheadxi/deployments@v0.4.3
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: ${{steps.vercel.outputs.preview-url}}

  deploy-website-main:
    name: Deploy website to production
    if: contains( github.ref, 'main')
    runs-on: ubuntu-20.04
    needs: install-typescript
    steps:
      - name: start deployment
        uses: bobheadxi/deployments@v0.4.3
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: "Production â€“ labelflow-site"
          ref: ${{ github.head_ref }}
          no_override: true
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Deploy website on Vercel
        uses: amondnet/vercel-action@v20
        id: vercel
        with:
          scope: ${{ secrets.VERCEL_ORG_ID}}
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          github-token: ${{ secrets.GITHUB_TOKEN }} #Optional
          vercel-args: "--prod" #Optional
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}} #Required
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_WEBSITE}} #Required
          vercel-project-name: "labelflow-site"
          # working-directory: ./typescript/web-site
          working-directory: .
          # alias-domains: | #Optional
          #   www.labelflow.ai
          #   pr-{{PR_NUMBER}}.www.labelflow.ai
          alias-domains: | #Optional
            www.labelflow.ai
      - run: npx vercel logs ${{steps.vercel.outputs.preview-url}} --token ${{ secrets.VERCEL_TOKEN }}
      - name: update deployment status
        uses: bobheadxi/deployments@v0.4.3
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: ${{steps.vercel.outputs.preview-url}}
